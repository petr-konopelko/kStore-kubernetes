apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-volume-claim
  namespace: development
spec:
  selector:
    matchLabels:
      name: database-pv
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: development
  name: db-deployment
  labels:
    app.kubernetes.io/name: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      resource: db
  template:
    metadata:
      namespace: development
      labels:
        resource: db
    spec:
      containers:
      - name: sql-server
        image: mcr.microsoft.com/mssql/server:2022-latest
        resources:
          requests:
            memory: "2G"
            cpu: "2000m"
          limits:
            memory: "2G"
            cpu: "2000m"
        ports:
        - containerPort: 1433
        volumeMounts:
          - mountPath: /var/opt/mssql
            name: path-volume
        env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: MSSQL_SA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: 'db-secret'
                key: 'sa-password'
      volumes:
        - name: path-volume
          persistentVolumeClaim:
            claimName: db-volume-claim
---

apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: development
spec:
  selector:
    resource: db
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 1433
    targetPort: 1433



